$version Generated by VerilatedVcd $end
$date Mon Apr  2 13:05:41 2018
 $end
$timescale 1ns $end

 $scope module TOP $end
  $var wire 32 ( i_Memdata [31:0] $end
  $var wire  1 $ i_clk $end
  $var wire  1 & i_instrwrite $end
  $var wire  1 ' i_regdst $end
  $var wire  1 % i_reset $end
  $var wire  8 . o_Imm [7:0] $end
  $var wire  5 ) o_RegA_addr [4:0] $end
  $var wire  5 * o_RegB_addr [4:0] $end
  $var wire  5 + o_RegD_addr [4:0] $end
  $var wire  6 - o_funct [5:0] $end
  $var wire  6 , o_op [5:0] $end
  $scope module v $end
   $var wire 32 / WIDTH [31:0] $end
   $var wire 32 ( i_Memdata [31:0] $end
   $var wire  1 $ i_clk $end
   $var wire  1 & i_instrwrite $end
   $var wire  1 ' i_regdst $end
   $var wire  1 % i_reset $end
   $var wire 32 # instruction [31:0] $end
   $var wire  8 . o_Imm [7:0] $end
   $var wire  5 ) o_RegA_addr [4:0] $end
   $var wire  5 * o_RegB_addr [4:0] $end
   $var wire  5 + o_RegD_addr [4:0] $end
   $var wire  6 - o_funct [5:0] $end
   $var wire  6 , o_op [5:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#8
b00000000000000000000000000000000 #
0$
1%
0&
0'
b00000000000000000000000000000000 (
b00000 )
b00000 *
b00000 +
b000000 ,
b000000 -
b00000000 .
b00000000000000000000000000100000 /
#10
1$
#15
0$
#18
0%
1&
1'
b11111100000111110000011111000000 (
#20
b11111100000111110000011111000000 #
1$
b11111 *
b111111 ,
b11000000 .
#25
0$
#28
b00000011111000001111100000111111 (
#30
b00000011111000001111100000111111 #
1$
b11111 )
b00000 *
b11111 +
b000000 ,
b111111 -
b00111111 .
#35
0$
#38
0&
b11111100000111110000011111000000 (
#40
1$
#45
0$
#48
0'
b00000 +
#50
1$
#55
0$
#58
1&
#60
b11111100000111110000011111000000 #
1$
b00000 )
b11111 *
b11111 +
b111111 ,
b000000 -
b11000000 .
#65
0$
