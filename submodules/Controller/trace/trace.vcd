$version Generated by VerilatedVcd $end
$date Thu Mar 29 12:49:20 2018
 $end
$timescale 1ns $end

 $scope module TOP $end
  $var wire  1 ( i_clk $end
  $var wire  6 + i_funct [5:0] $end
  $var wire  6 , i_op [5:0] $end
  $var wire  1 ) i_reset $end
  $var wire  1 * i_zero $end
  $var wire  3 7 o_alucontrol [2:0] $end
  $var wire  1 / o_alusrca $end
  $var wire  2 6 o_alusrcb [1:0] $end
  $var wire  1 4 o_iord $end
  $var wire  1 - o_memread $end
  $var wire  1 0 o_memtoreg $end
  $var wire  1 . o_memwrite $end
  $var wire  1 1 o_pcen $end
  $var wire  2 5 o_pcsrc [1:0] $end
  $var wire  1 3 o_regdst $end
  $var wire  1 2 o_regwrite $end
  $scope module v $end
   $var wire  2 # aluop [1:0] $end
   $var wire  1 $ branch $end
   $var wire  1 ( i_clk $end
   $var wire  6 + i_funct [5:0] $end
   $var wire  6 , i_op [5:0] $end
   $var wire  1 ) i_reset $end
   $var wire  1 * i_zero $end
   $var wire  3 7 o_alucontrol [2:0] $end
   $var wire  1 / o_alusrca $end
   $var wire  2 6 o_alusrcb [1:0] $end
   $var wire  1 4 o_iord $end
   $var wire  1 - o_memread $end
   $var wire  1 0 o_memtoreg $end
   $var wire  1 . o_memwrite $end
   $var wire  1 1 o_pcen $end
   $var wire  2 5 o_pcsrc [1:0] $end
   $var wire  1 3 o_regdst $end
   $var wire  1 2 o_regwrite $end
   $var wire  1 % pcwrite $end
   $scope module aludec $end
    $var wire  2 # i_aluop [1:0] $end
    $var wire  6 + i_funct [5:0] $end
    $var wire  3 7 o_alucontrol [2:0] $end
   $upscope $end
   $scope module fsm $end
    $var wire  1 ( i_clk $end
    $var wire  6 , i_op [5:0] $end
    $var wire  1 ) i_reset $end
    $var wire  4 & nextstate [3:0] $end
    $var wire  2 # o_aluop [1:0] $end
    $var wire  1 / o_alusrca $end
    $var wire  2 6 o_alusrcb [1:0] $end
    $var wire  1 $ o_branch $end
    $var wire  1 4 o_iord $end
    $var wire  1 - o_memread $end
    $var wire  1 0 o_memtoreg $end
    $var wire  1 . o_memwrite $end
    $var wire  2 5 o_pcsrc [1:0] $end
    $var wire  1 % o_pcwrite $end
    $var wire  1 3 o_regdst $end
    $var wire  1 2 o_regwrite $end
    $var wire  4 ' state [3:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#8
0$
1%
b00 #
b0001 &
b0000 '
0*
11
b000000 +
b010 7
0(
1)
b000000 ,
0-
0.
0/
00
04
02
03
b00 5
b01 6
#10
1(
#15
0(
#18
0)
b100000 ,
#20
0%
b0010 &
b0001 '
01
1(
b11 6
#25
0(
#28
#30
b0011 &
b0010 '
1(
1/
b10 6
#35
0(
#38
#40
b0100 &
b0011 '
1(
0/
14
b00 6
#45
0(
#48
#50
b0000 &
b0100 '
1(
10
04
12
#55
0(
#58
#60
1%
b0001 &
b0000 '
11
1(
00
02
b01 6
#65
0(
#68
b101000 ,
#70
0%
b0010 &
b0001 '
01
1(
b11 6
#75
0(
#78
#80
b0101 &
b0010 '
1(
1/
b10 6
#85
0(
#88
#90
b0000 &
b0101 '
1(
1.
0/
14
b00 6
#95
0(
#98
#100
1%
b0001 &
b0000 '
11
1(
0.
04
b01 6
#105
0(
#108
b000100 ,
#110
0%
b1000 &
b0001 '
01
1(
b11 6
#115
0(
#118
#120
1$
b01 #
b0000 &
b1000 '
b110 7
1(
1/
b01 5
b00 6
#125
0(
#128
#130
0$
1%
b00 #
b0001 &
b0000 '
11
b010 7
1(
0/
b00 5
b01 6
#135
0(
#138
b000010 ,
#140
0%
b1001 &
b0001 '
01
1(
b11 6
#145
0(
#148
#150
1%
b0000 &
b1001 '
11
1(
b10 5
b00 6
#155
0(
#158
#160
b0001 &
b0000 '
1(
b00 5
b01 6
#165
0(
#168
b100000 +
b000000 ,
#170
0%
b0110 &
b0001 '
01
1(
b11 6
#175
0(
#178
#180
b10 #
b0111 &
b0110 '
1(
1/
b00 6
#185
0(
#188
#190
b00 #
b0000 &
b0111 '
1(
0/
12
13
#195
0(
#198
#200
1%
b0001 &
b0000 '
11
1(
02
03
b01 6
#205
0(
#208
b100010 +
#210
0%
b0110 &
b0001 '
01
1(
b11 6
#215
0(
#218
#220
b10 #
b0111 &
b0110 '
b110 7
1(
1/
b00 6
#225
0(
#228
#230
b00 #
b0000 &
b0111 '
b010 7
1(
0/
12
13
#235
0(
#238
#240
1%
b0001 &
b0000 '
11
1(
02
03
b01 6
#245
0(
#248
b100100 +
#250
0%
b0110 &
b0001 '
01
1(
b11 6
#255
0(
#258
#260
b10 #
b0111 &
b0110 '
b001 7
1(
1/
b00 6
#265
0(
#268
#270
b00 #
b0000 &
b0111 '
b010 7
1(
0/
12
13
#275
0(
#278
#280
1%
b0001 &
b0000 '
11
1(
02
03
b01 6
#285
0(
#288
b100101 +
#290
0%
b0110 &
b0001 '
01
1(
b11 6
#295
0(
#298
#300
b10 #
b0111 &
b0110 '
b000 7
1(
1/
b00 6
#305
0(
#308
#310
b00 #
b0000 &
b0111 '
b010 7
1(
0/
12
13
#315
0(
#318
#320
1%
b0001 &
b0000 '
11
1(
02
03
b01 6
#325
0(
